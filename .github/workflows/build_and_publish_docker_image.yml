name: Build and publish Docker image

on:
  push:
    branches:
      - test_ci_migrate

jobs:
  build:
    name: Build app
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.2

      - name: Checkout
        uses: actions/checkout@v3

      - name: Get dependecies
        run: go mod tidy

      - name: Build
        run: go build -v cmd/api

  migrate:
    name: DB migration
    runs-on: ubuntu-latest
    environment: database
    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.2

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Install golang-migrate
        run: go install -tags 'mysql' github.com/golang-migrate/migrate/v4/cmd/migrate@latest

      - name: Add trusted source
        run: |
          IP=$(curl -s https://checkip.amazonaws.com/)
          doctl databases firewalls append ${{ secrets.DIGITALOCEAN_DATABASE_ID }} --rule ip_addr:"${IP}"

      - name: Migrate production database
        env:
          database_url: ${{ secrets.DATABASE_URL }}
        run: migrate -path migrations/migrations -database "$database_url" up

      - name: Remove trusted source
        run: |
          UUID=$(doctl database firewalls list ${{ secrets.DIGITALOCEAN_DATABASE_ID }} | grep $(curl -s https://checkip.amazonaws.com/) | awk '{print $1}')
          doctl databases firewalls remove ${{ secrets.DIGITALOCEAN_DATABASE_ID }} --uuid ${UUID}

  push_to_registry:
    name: Push Docker image to Docker Hub
    needs: build
    runs-on: ubuntu-latest
    environment: dockerhub
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          target: deploy
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.IMAGE_NAME }}:latest
